- Organize regions;

- do something with workitems without startdate

	- create a background-color/message for days "out of the office" (without task) in calendar view

	- allow creates task for another person/user

- block user dropdown in calendar view page (unblock only for specific user)

- create multiple tasks ? not sure if should

- INFO button not working for TFS events (working fine for fake data)
- Info() should get populated while rendering events (no needs to retrieve data again - modal is not being shown but is static html)

- reports end of the month

- link workitems (using autocomplete or search field) when creating/editing workitem (*1)

- REMOVE LINK FROM LAYOUT.CSHTML (input mask - install in project)

- register user (Name (exactly as in windows authentication), project, iteration path, etc...) [this will allow us to use with in multiple teams]

- feature to copy the previous task (give options if is there more than one) [ONLY FOR CREATION - NOT WHEN EDITING]

- reminder when change anything in a task and try to close without saving

	- apply loading gif for all ajax calls/request

	- refactor home page 

	- add a default prefix when creating task (in the 'title' field) - also get focused on the same field

	- allow close tasks; when a task is not closed should has a color different when it's closed (add status field in edit mode)

- give an option for tasks without 'StartDate' to apply the 'Creation Date' as 'StartDate' (and Close tasks) - not sure if should

- counter time to update each X minutes (when missing 2 min to update show a loading bar saying is going to update 
->	- prevents lose any work done by updating the page without inform)

- create a reminder/alert each x hour if a task isn't created for the current day

	- add status (new/active/closed) for tasks (creation/editing)

	- tasks with 'closed' status has different color

- feature to close tasks (monthly - close all tasks for specific month)

- apply event color when in listview mode (task closed, new or active) - ? not sure if should

	- refactor footer (layout)

	- indicator how many tasks in "Start Date Not Defined" (N) = (7 tasks)

- remove classes from HomeController

	- add Description field for Modal when creating/editing

	- allow close a task without saving as ACTIVE (from NEW to CLOSED) - callback function to save as ACTIVE and then as CLOSED once the TFS doesn't allow
	to save as CLOSED without saving as ACTIVE.

	- header in EXCEL file changes: Description -> Title / Comments -> Work items linked

	- Create accordion to collapse "Start Date Not Defined" section (allows expand only if have items)

	- App knows how to manage a task with more than 7.5 hours but doesn't know how to manage more than 1 task reaching more than 7.5 hours worked

- Change "select actions button" for a modal with all options

- Create some way to store USERS and their respectively information such as project, iteration path a.s.o.

	- apply 2 decimal points in "Days worked" in excel file (e.g. 18.46 instead 18.46666666666)

- Disparar e-mail com as planilhas consolidadas para os usuários pertinentes. 
Caso seja necessário uma validacao previa, que envie notificacao para aprovar o envio da planilha (RENAN)

	- keep loading gif protecting until finish the excel file creation 

- routine to create all excel files (from selected list of users/team) + report

- MASK IS NOT WORKING

- INCLUDE IN INFO MONTH MODAL RATES 

- FINAL REPORT WITH RATES AND CHARGES FOR EACH ONE AND SEPARATED TEAMS (CORE/DRAWDOWN)

- reorganize architecture //https://www.codeproject.com/Articles/1009532/Learn-Csharp-Design-patterns-step-by-step-with-a-p

- Add files to Git Ignore

- confirm dialog with breaklines unwanted (export to excel file the path where will save the file is breaking lines in a wrong way)




(*1)
Adding a link is simple. You create a link and add it to the collection, then save the work item
WorkItem wiFeatureGroup = WIStore.GetWorkItem(9999);
WorkItemLink wiLink = new WorkItemLink(WIStore.WorkItemLinkTypes["Is Produced By"], 9999, 8888);
wiFeatureGroup.WorkItemLinks.Add(wiLink);
wiFeatureGroup.Save();